@model AccountFilter
@{
    ViewData["Title"] = Localizer.Get("Accounts");
    Layout = "~/Views/Shared/_Layout.cshtml";
    ViewBag.useDatatable = true;
    ViewBag.useModels = true;
    ViewBag.useForm = true;
    ViewBag.useDatePicker = true;
    ViewBag.useCharts = true;


    var accessLevel = (DashboardAccessLevelModel)ViewData[ViewDataConstants.AccessLevel];

    var row = new AccountDto();
}

<!-- BEGIN: Content-->
<div class="app-content content ">
    <div class="content-overlay"></div>
    <div class="header-navbar-shadow"></div>
    <div class="content-wrapper container-xxl p-0">
        <div class="content-header row">
            <div class="content-header-left col-md-9 col-12 mb-2">
                <div class="row breadcrumbs-top">
                    <div class="col-6">
                        <h2 class="content-header-title float-start mb-0">@ViewData["Title"]</h2>
                        <div class="breadcrumb-wrapper">
                            <ol class="breadcrumb">
                                <li class="breadcrumb-item">
                                    <a href="#">@Localizer.Get("Dashboard")</a>
                                </li>
                                <li class="breadcrumb-item active">
                                    @ViewData["Title"]
                                </li>

                            </ol>


                        </div>
                    </div>



                </div>
            </div>
        </div>

        <div class="content-body">
            <section id="ajax-datatable">
                <div class="row">
                    <div class="col-12">
                        <div class="card">
                            <div class="card-header border-bottom">
                                <h4 class="card-title"> @ViewData["Title"]</h4>

                            </div>
                       
                            <div class="card-datatable">
                                <table class="datatables datatables-ajax table table-responsive table">
                                    <thead>
                                        <tr>
                                            <th>
                                                @Html.DisplayNameFor(model => row.Id)

                                                <a id="profile" asp-action="Profile">
                                                </a>

                                                @if (accessLevel.CreateAccess)
                                                {
                                                    <a id="create" asp-action="CreateOrEdit">
                                                    </a>
                                                }

                                                @if (accessLevel.EditAccess)
                                                {
                                                    <a id="edit" asp-action="CreateOrEdit">
                                                    </a>
                                                }
                                                @if (accessLevel.DeleteAccess)
                                                {
                                                    <a id="delete" asp-action="Delete">
                                                    </a>
                                                }

                                            </th>
                                            <th>@Html.DisplayNameFor(model => row.FullName)</th>
                                            <th>@Html.DisplayNameFor(model => row.Nationality)</th>
                                            <th>@Html.DisplayNameFor(model => row.Country)</th>
                                            <th>@Html.DisplayNameFor(model => row.PhoneNumber)</th>
                                            <th>@Html.DisplayNameFor(model => row.EmailAddress)</th>
                                            <th>@Html.DisplayNameFor(model => row.CreatedAt)</th>
                                            <th class="no-sort">@Html.DisplayNameFor(model => row.LastActive)</th>
                                            <th>
                                                @Html.DisplayNameFor(model => row.Id)
                                            </th>
                                        </tr>
                                    </thead>
                                </table>
                            </div>
                        </div>
                    </div>
                </div>
            </section>

        </div>

    </div>
</div>
<!-- END: Content-->
@section scripts{
    <script src="~/apis/charts.js"></script>
    <script>
        
        function LoadTable() {
            var dt_ajax_table = $('.datatables');
            if (dt_ajax_table.length) {
                var dt_ajax = dt_ajax_table.dataTable({
                    // Ajax Filter
                    ajax: {
                        url: '@Url.Action("LoadTable")',
                        type: "POST",
                        contentType: "application/json",
                        dataType: "json",
                        data: function(data) {
                          
                            return JSON.stringify(data);
                        }
                    },
                    // Columns Setups
                    columns: [
                        { data: "id" },
                        {
                            data: "fullName",
                            render: function(data, type, row) {
                                var span = '';
                                
                                if (row.imageUrl != null) {

                                    return '<div class="d-flex justify-content-left align-items-center"><div class= "avatar-wrapper" ><div class="avatar me-1">'
                                        + '<img src="' + row.imageUrl + '"  height="32" width="32">'
                                        + span
                                        + '</div></div>'
                                        + ' <div class= "d-flex flex-column">'
                                        + '<a href="/AccountEntity/Account/Profile/' + row.id + '" class= "user_name text-truncate">'
                                        + '<span class= "fw-bolder">' + data + '</span></a> '
                                        + '<small class= "emp_post text-muted" ></small ></div></div>';
                                }
                                else {
                                    return '<div class="d-flex justify-content-left align-items-center"><div class= "avatar-wrapper" >'
                                        + '<div class="avatar  bg-light-dark  me-1"><span class="avatar-content"></span>' + span + '</div>'
                                        + '</div>'
                                        + ' <div class= "d-flex flex-column">'
                                        + '<a href="/AccountEntity/Account/Profile/' + row.id + '" class= "user_name text-truncate">'
                                        + '<span class= "fw-bolder">' + data + '</span></a> '
                                        + '<small class= "emp_post text-muted" ></small ></div></div>';
                                }


                            }
                        },
                        { data: "nationality.name" },
                        { data: "country.name" },

                        { data: "phoneNumber" },
                        { data: "emailAddress" },
                        { data: "createdAt" },
                        { data: "lastActive" },
                        { data: "id" },
                    ]
                });
                 $("button[type=reset]").on("click", function() {
                $(".dt-date").each(function() {
                    $(this).val('');
                })
            });

            $('body').on('submit', '.filter', function() {
                event.preventDefault();
                  dt_ajax_table.DataTable().draw();
            });


            }
        };


        function CheckDisplayType(forFilter) {
            if ($("#ajax-datatable").css('display') != 'none') {
              
            }
            else if ($("#ajax-charts").css('display') != 'none') {
                LoadCharts();
            }
        }

        $(document).ready(function() {
            LoadTable();
            CheckDisplayType();

            $(".displayType").on('click', function() {
                if ($("#ajax-datatable").css('display') != 'none') {
                    $("#ajax-datatable").css('display', 'none');
                    $("#ajax-charts").css('display', '');
                }
                else if ($("#ajax-charts").css('display') != 'none') {
                    $("#ajax-charts").css('display', 'none');
                    $("#ajax-datatable").css('display', '');
                }
                CheckDisplayType();
            });

                $('body').on('click', '#ExcelBtn', function () {
                    $.ajax({
                        url:'@Url.Action("ExportExcel")',
                        type: "POST",
                        data:  $('#FilterForm').serialize(),
                        success: function (result) {
                               window.open(result, '_blank');
                            }
                    });
                });


        });
    </script>
}
