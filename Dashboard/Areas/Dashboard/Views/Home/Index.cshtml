@using Entities.DBModels.DashboardAdministrationModels
@using Entities.AuthenticationModels
@model List<ChartDto>
@{
    ViewData["Title"] = Localizer.Get("Home");
    Layout = "~/Views/Shared/_Layout.cshtml";

    ViewBag.useCharts = true;
    ViewBag.useModels = true;

    string views = (string)ContextAccessor.HttpContext.Request.Cookies[ViewDataConstants.Views];

    List<int> viewList = new List<int>();

    if (!string.IsNullOrWhiteSpace(views))
    {
        viewList = views.Split(",").Select(Int32.Parse).ToList();
    }
    
    int dashboardRole = ((UserAuthenticatedDto)ViewData["auth"]).Fk_DashboardAdministrationRole;
}

<!-- BEGIN: Content-->
<div class="app-content content ">
    <div class="content-overlay"></div>
    <div class="header-navbar-shadow"></div>
    <div class="content-wrapper container-xxl p-0">
        <div class="content-header row">
            <div class="content-header-left col-md-9 col-12 mb-2">
                <div class="row breadcrumbs-top">
                    <div class="col-12">
                        <h2 class="content-header-title float-start mb-0">@ViewData["Title"]</h2>
                    </div>
                </div>
            </div>
        </div>
        <div class="content-body">
            <div class="row">
                <div class="col-12">
                    <div class="card text-center">
                        <div class="card-body">
                                
                            @* @if (dashboardRole == (int)DashboardAdministrationRoleEnum.Developer) *@
                            @* { *@
                                <a id="UpdateStandings" class="btn btn-primary"> @Localizer.Get("Update Standings") </a>
                                <a id="UpdateGames" class="btn btn-primary"> @Localizer.Get("Update Games") </a>
                            // }
                            
                            @* Start Updating Modals *@
                            @* @if (dashboardRole == (int)DashboardAdministrationRoleEnum.Developer) *@
                            @* { *@
                                <a class="btn btn-primary update_game_result"> @Localizer.Get("UpdateGameResult") </a>
                                <a class="btn btn-primary update_account_team_game_weak_ranking"> @Localizer.Get("UpdateAccountTeamGameWeakRanking") </a>
                                <a class="btn btn-primary update_private_league_ranking"> @Localizer.Get("UpdatePrivateLeagueRanking") </a>
                                <a class="btn btn-primary update_account_team_points"> @Localizer.Get("UpdateAccountTeamPoints") </a>
                            @* } *@
                            
                            @* End Updating Modals *@

                            <section id="ajax-charts">
                                <div class="row">
                                    <div class="col-12">
                                        <div class="">
                                            <div class="card-body">
                                                <div class="row">

                                                    @if (Model != null && Model.Any())
                                                    {
                                                        <div class="row">
                                                            @foreach (var chart in Model.Where(a => a.Type == ChartTypeEnum.Donut))
                                                            {
                                                                <div class="col-md-4 col-12 mt-2">
                                                                    <div class="">
                                                                        <div class="flex-column align-items-start">
                                                                            <h4 class="card-title mb-75 text-center">@Localizer.Get(chart.Text)</h4>
                                                                        </div>
                                                                        <div class="">
                                                                            <div id="@chart.Key" class="Donut" style="letter-spacing: normal;"></div>
                                                                        </div>
                                                                    </div>
                                                                </div>
                                                            }
                                                        </div>
                                                        <div class="row">
                                                            @foreach (var chart in Model.Where(a => a.Type == ChartTypeEnum.Column))
                                                            {
                                                                <div class="col-md-12">
                                                                    <div class="card">
                                                                        <div class="card-header flex-column align-items-start">
                                                                            <h4 class="card-title mb-75">@Localizer.Get(chart.Text)</h4>
                                                                        </div>
                                                                        <div class="card-body">
                                                                            <div id="@chart.Key" class="Column" style="letter-spacing: normal;"></div>
                                                                        </div>
                                                                    </div>
                                                                </div>
                                                            }
                                                        </div>
                                                        <div class="row">
                                                            @foreach (var chart in Model.Where(a => a.Type == ChartTypeEnum.Bar))
                                                            {
                                                                <div class="col-md-12">
                                                                    <div class="card">
                                                                        <div class="card-header flex-column align-items-start">
                                                                            <h4 class="card-title mb-75">@Localizer.Get(chart.Text)</h4>
                                                                        </div>
                                                                        <div class="card-body">
                                                                            <div id="@chart.Key" class="Bar" style="letter-spacing: normal;"></div>
                                                                        </div>
                                                                    </div>
                                                                </div>
                                                            }
                                                        </div>
                                                    }
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>

                            </section>

                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<partial name="../Home/_HomeModals" view-data="ViewData" />

<!-- END: Content-->
@section scripts {
    <script src="~/apis/charts.js"></script>
    <script>
        $(document).ready(function () {

            LoadCharts();

            $(document).on("click", "#UpdateStandings", function(e) {
             $.ajax({
                 url: '@Url.Action("UpdateStandings", "Home")',
                 method: 'post',
                 success: function(data) {
                     $("#success").modal('show');
                 },
                 error: function (result) {
                     $("#success").modal('show');
                 }
             });
            });

            $(document).on("click", "#UpdateGames", function(e) {
             $.ajax({
                 url: '@Url.Action("UpdateGames", "Home")',
                 method: 'post',
                 success: function(data) {
                     $("#success").modal('show');
                 },
                 error: function (result) {
                     $("#success").modal('show');
                 }
             });
        });

            // Start Updating Modals
            
            // start update_game_result
            $(document).on("click", ".update_game_result", function(e) {
              e.preventDefault();
              
              $(".update_game_result_modal").modal('show');
            });
            
            $(document).on("click", ".update_game_result_submit", function (e) {
                let fk_GameWeak = $("select[name=Fk_GameWeak]").val();
                let _365_MatchId = $("input[name=_365_MatchId]").val();
                let runBonus = $("select[name=RunBonus]").val();
                
                $.ajax({
                    url: '@Url.Action("UpdateGameResult", "Home", new {area = "Dashboard"})',
                    method: 'post',
                    data: {
                      fk_GameWeak: fk_GameWeak,
                      _365_MatchId: _365_MatchId,
                      runBonus: runBonus
                    },
                    success: function(data) {
                      $("#success").modal('show');
                    }
                }); 
            });
            // end update_game_result
            
            // start update_account_team_game_weak_ranking
            $(document).on("click", ".update_account_team_game_weak_ranking", function(e) {
              e.preventDefault();
              
              $(".update_account_team_game_weak_ranking_modal").modal('show');
            });
            
            $(document).on("click", ".update_account_team_game_weak_ranking_submit", function (e) {
                let fk_GameWeak = $("select[name=Fk_GameWeak]").val();
                
                $.ajax({
                    url: '@Url.Action("UpdateAccountTeamGameWeakRanking", "Home", new {area = "Dashboard"})',
                    method: 'post',
                    data: {
                      fk_GameWeak: fk_GameWeak,
                    },
                    success: function(data) {
                      $("#success").modal('show');
                    }
                }); 
            });
            // end update_account_team_game_weak_ranking
            
            // start update_private_league_ranking
            $(document).on("click", ".update_private_league_ranking", function(e) {
              e.preventDefault();
              
              $(".update_private_league_ranking_modal").modal('show');
            });
            
            $(document).on("click", ".update_private_league_ranking_submit", function (e) {
                let fk_GameWeak = $("select[name=Fk_GameWeak]").val();
                
                $.ajax({
                    url: '@Url.Action("UpdatePrivateLeagueRanking", "Home", new {area = "Dashboard"})',
                    method: 'post',
                    data: {},
                    success: function(data) {
                      $("#success").modal('show');
                    }
                }); 
            });
            // end update_private_league_ranking
            
            // start update_account_team_points
            $(document).on("click", ".update_account_team_points", function(e) {
              e.preventDefault();
              
              $(".update_account_team_points_modal").modal('show');
            });
            
            $(document).on("click", ".update_account_team_points_submit", function (e) {
                let fk_GameWeak = $("select[name=Fk_GameWeak]").val();
                
                $.ajax({
                    url: '@Url.Action("UpdateAccountTeamPoints", "Home", new {area = "Dashboard"})',
                    method: 'post',
                    data: {
                      fk_GameWeak: fk_GameWeak,
                    },
                    success: function(data) {
                      $("#success").modal('show');
                    }
                }); 
            });
            // end update_account_team_points
            
            // End Updating Modals
        });
    </script>
}
