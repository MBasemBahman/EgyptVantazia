@using Dashboard.Areas.PaymentEntity.Models
@model Dashboard.Areas.PaymentEntity.Models.PaymentFilter
@{
    ViewData["Title"] = Localizer.Get("Account Payment");
    Layout = "~/Views/Shared/_Layout.cshtml";
    ViewBag.useDatatable = true;
    ViewBag.useModels = true;
    ViewBag.useForm = true;
    ViewBag.useDatePicker = true;
    ViewBag.useCharts = true;


    var accessLevel = (DashboardAccessLevelModel)ViewData[ViewDataConstants.AccessLevel];
    ViewBag.emptyLayout = ViewData["ProfileLayOut"] != null ? (bool)ViewData["ProfileLayOut"] : false;

    var row = new PaymentDto();
}

<!-- BEGIN: Content-->
@if (!ViewBag.emptyLayout)
{
    <div class="app-content content ">
        <div class="content-overlay"></div>
        <div class="header-navbar-shadow"></div>
        <div class="content-wrapper container-xxl p-0">
            <div class="content-header row">
                <div class="content-header-left col-md-9 col-12 mb-2">
                    <div class="row breadcrumbs-top">
                        <div class="col-6">
                            <h2 class="content-header-title float-start mb-0">@ViewData["Title"]</h2>
                            <div class="breadcrumb-wrapper">
                                <ol class="breadcrumb">
                                    <li class="breadcrumb-item">
                                        <a href="#">@Localizer.Get("Dashboard")</a>
                                    </li>
                                    <li class="breadcrumb-item active">
                                        @ViewData["Title"]
                                    </li>

                                </ol>
                                
                            </div>
                        </div>

                    </div>
                </div>
            </div>

            <div class="content-body">
                <section id="ajax-datatable">
                    <div class="row">
                        <div class="col-12">
                            <div class="card">
                                <div class="card-datatable">
                                    <table class="datatables datatables-ajax table table-responsive table">
                                        <thead>
                                            <tr>
                                                <th>
                                                    @Html.DisplayNameFor(model => row.Id)
                                                </th>
                                                <th>@Html.DisplayNameFor(model => row.Account)</th>
                                                <th>@Html.DisplayNameFor(model => row.TransactionId)</th>
                                                <th>@Html.DisplayNameFor(model => row.Amount)</th>
                                                <th>@Html.DisplayNameFor(model => row.CreatedAt)</th>
                                                <th>
                                                    @Html.DisplayNameFor(model => row.Id)
                                                </th>
                                            </tr>
                                        </thead>
                                    </table>
                                </div>
                            </div>
                        </div>
                    </div>
                </section>

            </div>

        </div>
    </div>
}
else
{
    <section id="ajax-datatable">
        <div class="row">
            <div class="col-12">
                <div class="card">
                    <div class="card-header border-bottom">
                        <h4 class="card-title"> @ViewData["Title"]</h4>

                    </div>

                    <div class="card-datatable">
                        <table class="datatables datatables-ajax table table-responsive table">
                            <thead>
                                <tr>
                                    <th>
                                        @Html.DisplayNameFor(model => row.Id)
                                    </th>
                                    <th>@Html.DisplayNameFor(model => row.TransactionId)</th>
                                    <th>@Html.DisplayNameFor(model => row.Amount)</th>
                                    <th>@Html.DisplayNameFor(model => row.CreatedAt)</th>
                                    <th>
                                        @Html.DisplayNameFor(model => row.Id)
                                    </th>
                                </tr>
                            </thead>
                        </table>
                    </div>
                </div>
            </div>
        </div>
    </section>

}

<!-- END: Content-->
@section scripts{
    <script src="~/apis/site.js"></script>
    <script src="~/apis/charts.js"></script>
    @if (!ViewBag.emptyLayout)
    {
        <script>
            function LoadTable() {
                var dt_ajax_table = $('.datatables');
                if (dt_ajax_table.length) {
                    var dt_ajax = dt_ajax_table.dataTable({
                        // Ajax Filter
                        ajax: {
                            url: '@Url.Action("LoadTable")',
                            type: "POST",
                            contentType: "application/json",
                            dataType: "json",
                            data: function (data) {
                                data.Fk_Account = @Model.Fk_Account;
                                return JSON.stringify(data);
                            }
                        },
                        // Columns Setups
                        columns: [
                            { data: "id" },
                            { data: "account.name", orderable: false, },
                            { data: "transactionId" },
                            { data: "amount" },
                            { data: "createdAt" },
                            { data: "id" },
                        ]
                    });
                    $("button[type=reset]").on("click", function () {
                        $(".dt-date").each(function () {
                            $(this).val('');
                        })
                    });

                    $('body').on('submit', '.filter', function () {
                        event.preventDefault();
                        dt_ajax_table.DataTable().draw();
                    });


                }
            };



            $(document).ready(function () {
                LoadTable();
            });
        </script>
    }
    else
    {
        <script>
            function LoadTable() {
                var dt_ajax_table = $('.datatables');
                if (dt_ajax_table.length) {
                    var dt_ajax = dt_ajax_table.dataTable({
                        // Ajax Filter
                        ajax: {
                            url: '@Url.Action("LoadTable")',
                            type: "POST",
                            contentType: "application/json",
                            dataType: "json",
                            data: function (data) {
                                data.Fk_Account = @Model.Fk_Account;
                                return JSON.stringify(data);
                            }
                        },
                        // Columns Setups
                        columns: [
                            { data: "id" },
                            { data: "transactionId" },
                            { data: "amount" },
                            { data: "createdAt" },
                            { data: "id" },
                        ]
                    });
                    $("button[type=reset]").on("click", function () {
                        $(".dt-date").each(function () {
                            $(this).val('');
                        })
                    });
    
                    $('body').on('submit', '.filter', function () {
                        event.preventDefault();
                        dt_ajax_table.DataTable().draw();
                    });
    
    
                }
            };
    
    
    
            $(document).ready(function () {
                LoadTable();
            });
        </script>
    }
}
