@model PlayerMarkFilter
@{
    ViewData["Title"] = Localizer.Get("PlayerMarks");
    Layout = "~/Views/Shared/_Layout.cshtml";
    ViewBag.useDatatable = true;
    ViewBag.useModels = true;
    ViewBag.useForm = true;
    ViewBag.useDatePicker = true;


    var accessLevel = (DashboardAccessLevelModel)ViewData[ViewDataConstants.AccessLevel];
    ViewBag.emptyLayout = ViewData["ProfileLayOut"] != null ? (bool)ViewData["ProfileLayOut"] : false;

    var row = new PlayerMarkDto();
}

<!-- BEGIN: Content-->
@if (!ViewBag.emptyLayout)
{   
    <div class="app-content content ">
        <div class="content-overlay"></div>
        <div class="header-navbar-shadow"></div>
        <div class="content-wrapper container-xxl p-0">
            <div class="content-header row">
                <div class="content-header-left col-md-9 col-12 mb-2">
                    <div class="row breadcrumbs-top">
                        <div class="col-6">
                            <h2 class="content-header-title float-start mb-0">@ViewData["Title"]</h2>
                            <div class="breadcrumb-wrapper">
                                <ol class="breadcrumb">
                                    <li class="breadcrumb-item">
                                        <a href="#">@Localizer.Get("Dashboard")</a>
                                    </li>
                                    <li class="breadcrumb-item active">
                                        @ViewData["Title"]
                                    </li>

                                </ol>


                            </div>
                        </div>



                    </div>
                </div>
            </div>

            <div class="content-body">
                <section id="ajax-datatable">
                    <div class="row">
                        <div class="col-12">
                            <div class="card">
                                <div class="card-header border-bottom">
                                    <h4 class="card-title"> @ViewData["Title"]</h4>
                                </div>
                                
                                <p class="m-2 demo-inline-spacing">
                                    <a class="btn btn-primary me-1" data-bs-toggle="collapse" href="#AdvancedFilter" role="button" aria-expanded="false" aria-controls="AdvancedFilter">
                                        <i data-feather='filter'></i>
                                        @Localizer.Get("Advanced Search")
                                    </a>
    
                                </p>
                                @{
                                    await Html.RenderPartialAsync("../PlayerMark/Filter", Model, ViewData);
                                }
                                <div class="card-datatable">
                                    <table class="datatables datatables-ajax table table-responsive table">
                                        <thead>
                                            <tr>
                                                <th>
                                                    @Html.DisplayNameFor(model => row.Id)
                                                    <a id="details" asp-action="Details">
                                                    </a>

                                                    @if (accessLevel.EditAccess)
                                                    {
                                                        <a id="edit" asp-action="CreateOrEdit">
                                                        </a>
                                                    }
                                                    @if (accessLevel.DeleteAccess)
                                                    {
                                                        <a id="delete" asp-action="Delete">
                                                        </a>
                                                    }

                                                </th>
                                                <th>@Html.DisplayNameFor(model => row.Player)</th>
                                                <th>@Html.DisplayNameFor(model => row.Mark)</th>
                                                <th>@Html.DisplayNameFor(model => row.Used)</th>
                                                <th>@Html.DisplayNameFor(model => row.Count)</th>
                                                <th>@Html.DisplayNameFor(model => row.CreatedAt)</th>

                                                <th>
                                                    @Html.DisplayNameFor(model => row.Id)
                                                </th>
                                            </tr>
                                        </thead>
                                    </table>
                                </div>
                            </div>
                        </div>
                    </div>
                </section>
            </div>

        </div>
    </div>
}
else
{
    <section id="ajax-datatable">
        <div class="row">
            <div class="col-12">
                <div class="card">
                    <div class="card-header border-bottom">
                        <h4 class="card-title"> @ViewData["Title"]</h4>
                    </div>
                    <p class="m-2 demo-inline-spacing">
                        <a class="btn btn-primary me-1" data-bs-toggle="collapse" href="#AdvancedFilter" role="button" aria-expanded="false" aria-controls="AdvancedFilter">
                            <i data-feather='filter'></i>
                            @Localizer.Get("Advanced Search")
                        </a>

                    </p>
                    @{
                        await Html.RenderPartialAsync("../PlayerMark/Filter", Model, ViewData);
                    }
                    <div class="card-datatable">
                        <table class="datatables datatables-ajax table table-responsive table">
                            <thead>
                                <tr>
                                    <th>
                                        @Html.DisplayNameFor(model => row.Id)
                                        <a id="details" asp-action="Details">
                                        </a>

                                        @if (accessLevel.CreateAccess)
                                        {
                                            <a id="create" asp-action="CreateOrEdit" asp-route-Fk_Player="@Model.Fk_Player"
                                               asp-route-returnPage="@((int)PlayerMarkReturnPage.PlayerProfile)">
                                            </a>
                                        }
                                        
                                        @if (accessLevel.EditAccess)
                                        {
                                            <input type="hidden" id="routeData" value="?returnPage=@((int)PlayerMarkReturnPage.PlayerProfile)" />
                                            <a id="edit" asp-action="CreateOrEdit">
                                            </a>
                                        }
                                        
                                        @if (accessLevel.DeleteAccess)
                                        {
                                            <a id="delete" asp-action="Delete">
                                            </a>
                                        }

                                    </th>
                                    <th>@Html.DisplayNameFor(model => row.Player)</th>
                                    <th>@Html.DisplayNameFor(model => row.Mark)</th>
                                    <th>@Html.DisplayNameFor(model => row.Used)</th>
                                    <th>@Html.DisplayNameFor(model => row.Count)</th>
                                    <th>@Html.DisplayNameFor(model => row.CreatedAt)</th>

                                    <th>
                                        @Html.DisplayNameFor(model => row.Id)
                                    </th>
                                </tr>
                            </thead>
                        </table>
                    </div>
                </div>
            </div>
        </div>
    </section>
}
<!-- END: Content-->
@section scripts{
    <script>

        function LoadTable() {
                var dt_ajax_table = $('.datatables');
                if (dt_ajax_table.length) {
                    var dt_ajax = dt_ajax_table.dataTable({
                        // Ajax Filter
                        ajax: {
                            url: '@Url.Action("LoadTable")',
                            type: "POST",
                            contentType: "application/json",
                            dataType: "json",
                            data: function (data) {
                                data.Fk_Player = @Model.Fk_Player;
                                data.Fk_Mark = $("#Fk_Mark").length > 0 ? $("#Fk_Mark").val() : @Model.Fk_Mark;
                                data.Fk_Teams = $("#Fk_Teams").length > 0 ? $("#Fk_Teams").val() : null;
                                data.Fk_Players = $("#Fk_Players").length > 0 ? $("#Fk_Players").val() : null;
                                
                                return JSON.stringify(data);
                            }
                        },
                                                        
                        // Columns Setups
                        columns: [
                            { data: "id" },
                            {
                                data: "player", orderable: false,
                                render: function (data, type, row) {
                                    var span = '';
                                    if (data.imageUrl != null) {

                                        return '<div class="d-flex justify-content-left align-items-center"><div class= "avatar-wrapper" ><div class="avatar me-1">'
                                            + '<img src="' + data.imageUrl + '"  height="32" width="32">'
                                            + span
                                            + '</div></div>'
                                            + ' <div class= "d-flex flex-column">'
                                            + '<a href="/TeamEntity/Player/Profile/' + data.id + '" class= "user_name text-truncate">'
                                            + '<span class= "fw-bolder">' + data.name + '</span></a> '
                                            + '<small class= "emp_post text-muted" ></small ></div></div>';
                                    }
                                    else {
                                        return '<div class="d-flex justify-content-left align-items-center"><div class= "avatar-wrapper" >'
                                            + '<div class="avatar  bg-light-dark  me-1"><span class="avatar-content"></span>' + span + '</div>'
                                            + '</div>'
                                            + ' <div class= "d-flex flex-column">'
                                            + '<a href="/TeamEntity/Player/Profile/' + data.id + '" class= "user_name text-truncate">'
                                            + '<span class= "fw-bolder">' + data.name + '</span></a> '
                                            + '<small class= "emp_post text-muted" ></small ></div></div>';
                                    }


                                }
                            },
                            { data: "mark.name" },
                            { data: "used" },
                            { data: "count" },
                            { data: "createdAt" },
                            { data: "id" },
                        ]
                    });
                    $("button[type=reset]").on("click", function () {
                        $(".dt-date").each(function () {
                            $(this).val('');
                        })
                    });
    
                    $('body').on('submit', '.filter', function () {
                        event.preventDefault();
                        dt_ajax_table.DataTable().draw();
                    });
    
    
                }
            };
       

        $(document).ready(function () {
            LoadTable();

            $(".players_selector").select2({
                        ajax: {
                            url: "@Url.ActionLink("GetPlayersByName", "Services", new { area = "Dashboard" })",
                            dataType: "json",
                            type: 'post',
                            quietMillis: 50,
                            data: function (params) {
                              let query = {
                                name: params.term,
                                fk_Teams: $("#Fk_Teams").val()
                              }
                        
                              // Query parameters will be ?search=[term]&type=public
                              return query;
                            },
                            processResults: function (data) {
                                return {
                                    results: $.map(data, function (item, index) {
                                        return {
                                            id: index,
                                            text: item
                                        }
                                    })
                                };
                            }
                        }
                    });
        });
        
        
    </script>
}
