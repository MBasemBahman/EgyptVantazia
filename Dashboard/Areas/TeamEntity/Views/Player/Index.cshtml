@model PlayerFilter
@{
    ViewData["Title"] = Localizer.Get("Players");
    Layout = "~/Views/Shared/_Layout.cshtml";
    ViewBag.useDatatable = true;
    ViewBag.useModels = true;
    ViewBag.useForm = true;
    ViewBag.useDatePicker = true;
    ViewBag.useCharts = true;


    var accessLevel = (DashboardAccessLevelModel)ViewData[ViewDataConstants.AccessLevel];
    ViewBag.emptyLayout = ViewData["ProfileLayOut"] != null ? (bool)ViewData["ProfileLayOut"] : false;

    var row = new PlayerDto();
}

<!-- BEGIN: Content-->
@if (!ViewBag.emptyLayout)
{
    <div class="app-content content ">
        <div class="content-overlay"></div>
        <div class="header-navbar-shadow"></div>
        <div class="content-wrapper container-xxl p-0">
            <div class="content-header row">
                <div class="content-header-left col-md-9 col-12 mb-2">
                    <div class="row breadcrumbs-top">
                        <div class="col-6">
                            <h2 class="content-header-title float-start mb-0">@ViewData["Title"]</h2>
                            <div class="breadcrumb-wrapper">
                                <ol class="breadcrumb">
                                    <li class="breadcrumb-item">
                                        <a href="#">@Localizer.Get("Dashboard")</a>
                                    </li>
                                    <li class="breadcrumb-item active">
                                        @ViewData["Title"]
                                    </li>

                                </ol>


                            </div>
                        </div>



                    </div>
                </div>
            </div>

            <div class="content-body">
                <section id="ajax-datatable">
                    <div class="row">
                        <div class="col-12">
                            <div class="card">
                                <div class="card-header border-bottom">
                                    <h4 class="card-title"> @ViewData["Title"]</h4>

                                </div>
                                <p class="m-2 demo-inline-spacing">
                                    <a class="btn btn-primary me-1" data-bs-toggle="collapse" href="#AdvancedFilter" role="button" aria-expanded="false" aria-controls="AdvancedFilter">
                                        <i data-feather='filter'></i>
                                        @Localizer.Get("Advanced Search")
                                    </a>

                                </p>
                                @{
                                    await Html.RenderPartialAsync("../Player/Filter", Model, ViewData);
                                }
                                <div class="card-datatable">
                                    <form class="playersPricesForm" asp-action="EditPlayersPrices" method="get">
                                        <table class="datatables datatables-ajax table table-responsive table">
                                            <thead>
                                                <tr>
                                                    <th><input type="checkbox" class="selectAllPlayers" value=""></th>
                                                    <th>
                                                        @Html.DisplayNameFor(model => row.Id)

                                                        <a id="profile" asp-action="Profile">
                                                        </a>

                                                        <a id="editSpecific" asp-action="EditPlayersPrices">
                                                        </a>

                                                        @if (accessLevel.CreateAccess)
                                                        {
                                                            <a id="create" asp-action="CreateOrEdit">
                                                            </a>
                                                        }

                                                        @if (accessLevel.EditAccess)
                                                        {
                                                            <a id="edit" asp-action="CreateOrEdit">
                                                            </a>
                                                        }
                                                        @if (accessLevel.DeleteAccess)
                                                        {
                                                            <a id="delete" asp-action="Delete">
                                                            </a>
                                                        }
                                                    </th>
                                                    <th>@Html.DisplayNameFor(model => row.Name)</th>
                                                    <th>@Html.DisplayNameFor(model => row.ShortName)</th>
                                                    <th>@Html.DisplayNameFor(model => row.PlayerNumber)</th>
                                                    <th>@Html.DisplayNameFor(model => row.Age)</th>
                                                    <th>@Html.DisplayNameFor(model => row.Height)</th>
                                                    <th>@Html.DisplayNameFor(model => row.Team)</th>
                                                    <th>@Html.DisplayNameFor(model => row._365_PlayerId)</th>

                                                    <th>@Html.DisplayNameFor(model => row.SellPrice)</th>
                                                    <th>@Html.DisplayNameFor(model => row.BuyPrice)</th>

                                                    <th>@Html.DisplayNameFor(model => row.SellingCount)</th>
                                                    <th>@Html.DisplayNameFor(model => row.BuyingCount)</th>

                                                    <th>@Html.DisplayNameFor(model => row.PlayerPosition)</th>
                                                    <th>@Html.DisplayNameFor(model => row.FormationPosition)</th>
                                                    <th>@Html.DisplayNameFor(model => row.IsActive)</th>
                                                    <th>@Html.DisplayNameFor(model => row.CreatedAt)</th>
                                                    <th>
                                                        @Html.DisplayNameFor(model => row.Id)
                                                    </th>
                                                </tr>
                                            </thead>
                                        </table>
                                    </form>
                                </div>
                            </div>
                        </div>
                    </div>
                </section>

            </div>

        </div>
    </div>
}
else
{
    <section id="ajax-datatable">
        <input type="hidden" id="routeData" value="?returnPage=@((int)PlayerReturnPage.TeamProfile)">
        <div class="row">
            <div class="col-12">
                <div class="card">
                    <div class="card-header border-bottom">
                        <h4 class="card-title"> @ViewData["Title"]</h4>

                    </div>

                    <div class="card-datatable">
                        <table class="datatables datatables-ajax table table-responsive table">
                            <thead>
                                <tr>
                                    <th><input type="checkbox" class="selectAllPlayers" value=""></th>
                                    <th>
                                        @Html.DisplayNameFor(model => row.Id)

                                        <a id="profile" asp-action="Profile">
                                        </a>

                                        @if (accessLevel.CreateAccess)
                                        {
                                            <a id="create" asp-action="CreateOrEdit" asp-route-Fk_Team="@Model.Fk_Team">
                                            </a>
                                        }

                                        @if (accessLevel.EditAccess)
                                        {
                                            <a id="edit" asp-action="CreateOrEdit">
                                            </a>
                                        }
                                        @if (accessLevel.DeleteAccess)
                                        {
                                            <a id="delete" asp-action="Delete">
                                            </a>
                                        }

                                    </th>
                                    <th>@Html.DisplayNameFor(model => row.Name)</th>
                                    <th>@Html.DisplayNameFor(model => row.ShortName)</th>
                                    <th>@Html.DisplayNameFor(model => row.PlayerNumber)</th>
                                    <th>@Html.DisplayNameFor(model => row.Age)</th>
                                    <th>@Html.DisplayNameFor(model => row.Height)</th>

                                    <th>@Html.DisplayNameFor(model => row.Team)</th>
                                    <th>@Html.DisplayNameFor(model => row._365_PlayerId)</th>

                                    <th>@Html.DisplayNameFor(model => row.SellPrice)</th>
                                    <th>@Html.DisplayNameFor(model => row.BuyPrice)</th>

                                    <th>@Html.DisplayNameFor(model => row.SellingCount)</th>
                                    <th>@Html.DisplayNameFor(model => row.BuyingCount)</th>

                                    <th>@Html.DisplayNameFor(model => row.PlayerPosition)</th>
                                    <th>@Html.DisplayNameFor(model => row.FormationPosition)</th>

                                    <th>@Html.DisplayNameFor(model => row.IsActive)</th>
                                    <th>@Html.DisplayNameFor(model => row.CreatedAt)</th>
                                    <th>
                                        @Html.DisplayNameFor(model => row.Id)
                                    </th>
                                </tr>
                            </thead>
                        </table>
                    </div>
                </div>
            </div>
        </div>
    </section>

}
<!-- END: Content-->
@section scripts{
    <script src="~/apis/site.js"></script>
    <script src="~/apis/charts.js"></script>
    <script>
        function LoadTable() {
            var dt_ajax_table = $('.datatables');
            if (dt_ajax_table.length) {
                var dt_ajax = dt_ajax_table.dataTable({
                    // Ajax Filter
                    ajax: {
                        url: '@Url.Action("LoadTable")',
                        type: "POST",
                        contentType: "application/json",
                        dataType: "json",
                        data: function (data) {
                            data.Fk_Team = $("#Fk_Team").length > 0 ? $("#Fk_Team").val() : @Model.Fk_Team;
                            data.Fk_Season = $("#Fk_Season").length > 0 ? $("#Fk_Season").val() : @Model.Fk_Season;
                            data.Fk_GameWeak = $("#Fk_GameWeak").length > 0 ? $("#Fk_GameWeak").val() : @Model.Fk_GameWeak;
                            data.Fk_PlayerPosition = $("#Fk_PlayerPosition").length > 0 ? $("#Fk_PlayerPosition").val() : @Model.Fk_PlayerPosition;
                            data.CreatedAtFrom = $("#CreatedAtFrom").length > 0 ? $("#CreatedAtFrom").val() : '@Model.CreatedAtFrom';
                            data.CreatedAtTo = $("#CreatedAtTo").length > 0 ? $("#CreatedAtTo").val() : '@Model.CreatedAtTo';
                            data.IsActive = $("#IsActive").length > 0 ? $("#IsActive").val() : null;

                            return JSON.stringify(data);
                        }
                    },
                    // Columns Setups
                    columns: [
                        {
                             data: "id",
                             'targets': 0,
                             'searchable': false,
                             'orderable': false,
                             'className': 'dt-body-center',
                             'render': function (data, type, full, meta){
                                 return '<input type="checkbox" name="fk_Players[]" value="' + $('<div/>').text(data).html() + '">';
                             }
                        },
                        { data: "id" },
                        {
                            data: "name",
                            render: function (data, type, row) {
                                var span = '';

                                if (row.imageUrl != null) {

                                    return '<div class="d-flex justify-content-left align-items-center"><div class= "avatar-wrapper" ><div class="avatar me-1">'
                                        + '<img src="' + row.imageUrl + '"  height="32" width="32">'
                                        + span
                                        + '</div></div>'
                                        + ' <div class= "d-flex flex-column">'
                                        + '<a href="/TeamEntity/Player/Profile/' + row.id + '" class= "user_name text-truncate">'
                                        + '<span class= "fw-bolder">' + data + '</span></a> '
                                        + '<small class= "emp_post text-muted" ></small ></div></div>';
                                }
                                else {
                                    return '<div class="d-flex justify-content-left align-items-center"><div class= "avatar-wrapper" >'
                                        + '<div class="avatar  bg-light-dark  me-1"><span class="avatar-content"></span>' + span + '</div>'
                                        + '</div>'
                                        + ' <div class= "d-flex flex-column">'
                                        + '<a href="/TeamEntity/Player/Profile/' + row.id + '" class= "user_name text-truncate">'
                                        + '<span class= "fw-bolder">' + data + '</span></a> '
                                        + '<small class= "emp_post text-muted" ></small ></div></div>';
                                }


                            }
                        },
                        { data: "shortName" },
                        { data: "playerNumber" },
                        { data: "age", },
                        { data: "height",},
                        {
                            data: "team",
                            orderable: false,
                            render: function (data, type, row) {
                                var span = '';

                                if (data.imageUrl != null) {

                                    return '<div class="d-flex justify-content-left align-items-center"><div class= "avatar-wrapper" ><div class="avatar me-1">'
                                        + '<img src="' + data.imageUrl + '"  height="32" width="32">'
                                        + span
                                        + '</div></div>'
                                        + ' <div class= "d-flex flex-column">'
                                        + '<a href="/TeamEntity/Team/Profile/' + row.fk_Team + '" target="_blank" class= "user_name text-truncate">'
                                        + '<span class= "fw-bolder">' + data.name + '</span></a> '
                                        + '<small class= "emp_post text-muted" ></small ></div></div>';
                                }
                                else {
                                    return '<div class="d-flex justify-content-left align-items-center"><div class= "avatar-wrapper" >'
                                        + '<div class="avatar  bg-light-dark  me-1"><span class="avatar-content"></span>' + span + '</div>'
                                        + '</div>'
                                        + ' <div class= "d-flex flex-column">'
                                        + '<a href="/TeamEntity/Player/Profile/' + row.fk_Team + '"  target="_blank" class= "user_name text-truncate">'
                                        + '<span class= "fw-bolder">' + data.name + '</span></a> '
                                        + '<small class= "emp_post text-muted" ></small ></div></div>';
                                }


                            }
                        },
                        { data: "_365_PlayerId" },
                        { data: "sellPrice" },
                        { data: "buyPrice" },
                        { data: "sellingCount" },
                        { data: "buyingCount" },
                        {
                            data: "playerPosition",
                            orderable: false,
                            render: function (data, type, row) {
                                var span = '';

                                if (data.imageUrl != null) {

                                    return '<div class="d-flex justify-content-left align-items-center"><div class= "avatar-wrapper" ><div class="avatar me-1">'
                                        + '<img src="' + data.imageUrl + '"  height="32" width="32">'
                                        + span
                                        + '</div></div>'
                                        + ' <div class= "d-flex flex-column">'
                                        + '<a href="#"  class= "user_name text-truncate">'
                                        + '<span class= "fw-bolder">' + data.name + '</span></a> '
                                        + '<small class= "emp_post text-muted" ></small ></div></div>';
                                }
                                else {
                                    return '<div class="d-flex justify-content-left align-items-center"><div class= "avatar-wrapper" >'
                                        + '<div class="avatar  bg-light-dark  me-1"><span class="avatar-content"></span>' + span + '</div>'
                                        + '</div>'
                                        + ' <div class= "d-flex flex-column">'
                                        + '<a href="#"  class= "user_name text-truncate">'
                                        + '<span class= "fw-bolder">' + data.name + '</span></a> '
                                        + '<small class= "emp_post text-muted" ></small ></div></div>';
                                }
                            }
                        },
                        {
                            data: "formationPosition",
                            orderable: false,
                            render: function (data, type, row) {
                                var span = '';
                                if (data == null) {
                                    return '';
                                }
                                else if (data.imageUrl != null) {

                                    return '<div class="d-flex justify-content-left align-items-center"><div class= "avatar-wrapper" ><div class="avatar me-1">'
                                        + '<img src="' + data.imageUrl + '"  height="32" width="32">'
                                        + span
                                        + '</div></div>'
                                        + ' <div class= "d-flex flex-column">'
                                        + '<a href="#"  class= "user_name text-truncate">'
                                        + '<span class= "fw-bolder">' + data.name + '</span></a> '
                                        + '<small class= "emp_post text-muted" ></small ></div></div>';
                                }
                                else {
                                    return '<div class="d-flex justify-content-left align-items-center"><div class= "avatar-wrapper" >'
                                        + '<div class="avatar  bg-light-dark  me-1"><span class="avatar-content"></span>' + span + '</div>'
                                        + '</div>'
                                        + ' <div class= "d-flex flex-column">'
                                        + '<a href="#"  class= "user_name text-truncate">'
                                        + '<span class= "fw-bolder">' + data.name + '</span></a> '
                                        + '<small class= "emp_post text-muted" ></small ></div></div>';
                                }
                            }
                        },
                        { data: "isActive", render: function(data) {
                          if (data) {
                              return '@Localizer.Get("Yes")';
                          }
                          return '@Localizer.Get("No")';
                        } },
                        { data: "createdAt" },
                        { data: "id" },
                    ],
                    'order': [[1, 'asc']],
                    scrollX: true
                });
                $("button[type=reset]").on("click", function () {
                    $(".dt-date").each(function () {
                        $(this).val('');
                    })
                });

                $('body').on('submit', '.filter', function () {
                    event.preventDefault();
                    dt_ajax_table.DataTable().draw();
                });


            }
        };

        $(document).ready(function () {
            LoadTable();
        });

        $(document).on("click", ".edit-rows", function(e) {
          e.preventDefault();
          let fk_Players = $('input[name="fk_Players[]"]:checked').map(function(){return $(this).val();}).get();

          if (fk_Players.length == 0)  {
              alert('choose one at least');
          } else {
            // $(".playersPricesForm").submit();

            window.location.href = '/TeamEntity/Player/EditPlayersPrices?fk_Players='+fk_Players;

          }

        });

        $(document).on("click", ".selectAllPlayers", function() {
          $('input:checkbox').prop('checked', this.checked);
        });

        $(document).on("change", "#Fk_Season", function() {
          let fk_Season = $(this).val();

          getTeams($("#Fk_Team"), fk_Season, false);
        });
    </script>
}
